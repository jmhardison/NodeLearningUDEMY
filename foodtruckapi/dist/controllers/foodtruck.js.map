{"version":3,"sources":["../../src/controllers/foodtruck.js"],"names":["config","db","api","post","req","res","newRest","name","body","foodtype","avgcost","geometry","save","err","send","json","message","get","find","foodtruck","findById","params","id","put","delete","reviews","foreach","item","findByIdAndRemove","newReview","title","text","review","push"],"mappings":"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","file":"foodtruck.js","sourcesContent":["//foodtruck controller\r\nimport mongoose from 'mongoose';\r\nimport {Router} from 'express';\r\nimport Foodtruck from '../models/foodtruck.js';\r\nimport Review from '../models/review.js';\r\n\r\nexport default({ config, db}) => {\r\n    let api = Router();\r\n\r\n    //  for /v1/foodtruck/add\r\n    api.post('/add', (req, res) => {\r\n        let newRest = new Foodtruck();\r\n        newRest.name = req.body.name;\r\n        newRest.foodtype = req.body.foodtype;\r\n        newRest.avgcost = req.body.avgcost;\r\n        newRest.geometry = req.body.geometry;\r\n\r\n        newRest.save(err => {\r\n            if(err){\r\n                res.send(err);\r\n            }\r\n            res.json({message: 'Foodtruck saved successfully.'});\r\n        });\r\n    });\r\n\r\n    // for /v1/foodtruck/\r\n    api.get('/', (req, res) => {\r\n        Foodtruck.find({}, (err, foodtruck) => {\r\n            if(err){\r\n                res.send(err);\r\n            }\r\n            res.json(foodtruck);\r\n        });\r\n    });\r\n\r\n    // for /v1/foodtruck/:ID | get\r\n\r\n    api.get('/:id', (req, res) => {\r\n        Foodtruck.findById(req.params.id, (err, foodtruck) => {\r\n            if(err){\r\n                res.send(err);\r\n            }\r\n            res.json(foodtruck);\r\n        });\r\n    });\r\n\r\n    // for /v1/foodtruck/:id | update\r\n    api.put('/:id', (req,res) => {\r\n        Foodtruck.findById(req.params.id, (err, foodtruck) => {\r\n            if(err){\r\n                res.send(err);\r\n            }\r\n            foodtruck.name = req.body.name;\r\n            foodtruck.foodtype = req.body.foodtype;\r\n            foodtruck.avgcost = req.body.avgcost;\r\n            foodtruck.geometry = req.body.geometry;\r\n            foodtruck.save(err => {\r\n                if(err)\r\n                {\r\n                    res.send(err);\r\n                }\r\n                res.json({message: `${req.params.id} updated with new name`});\r\n            });\r\n        \r\n            \r\n        });\r\n    });\r\n    \r\n    // for /v1/foodtruck/:id | delete\r\n    api.delete('/:id', (req,res) => {\r\n        Foodtruck.findById(req.params.id, (err, foodtruck) => {\r\n            if(err){\r\n                res.send(err);\r\n            }\r\n           foodtruck.reviews.foreach((item) => {\r\n                Review.findByIdAndRemove(item.id, err => {\r\n                    if(err){\r\n                        res.send(err);\r\n                    }\r\n\r\n                });\r\n           });            \r\n           foodtruck.delete(err => {\r\n            if(err){\r\n                res.send(err);\r\n            }\r\n           });\r\n            res.json({message: `${req.params.id} successfully deleted.`});\r\n        });\r\n    });\r\n\r\n\r\n    // for review addition\r\n    // /v1/foodtruck/reviews/add/:id\r\n    api.post('/reviews/add/:id', (req, res) => {\r\n        Foodtruck.findById(req.params.id, (err, foodtruck) => {\r\n            if(err){\r\n                res.send(err);\r\n            }\r\n            let newReview = new Review();\r\n            newReview.title = req.body.title;\r\n            newReview.text = req.body.text;\r\n            newReview.foodtruck = foodtruck.id;\r\n\r\n            newReview.save((err, review) =>{\r\n                if(err){\r\n                    res.send(err);\r\n                }\r\n                foodtruck.reviews.push(newReview);\r\n                foodtruck.save(err => {\r\n                    if(err){\r\n                        res.send(err);\r\n                    }\r\n                    res.json({message: 'Food truck review saved.'});\r\n                });\r\n            });\r\n            \r\n        });\r\n    });\r\n\r\n    // get reviews for a specified food truck\r\n    api.get('/reviews/:id', (req, res) => {\r\n        Review.find({foodtruck: req.params.id}, (err, review) => {\r\n            if(err){\r\n                res.send(err);\r\n            }\r\n            res.json(review);\r\n        })\r\n    })\r\n\r\n    return api;\r\n\r\n}"]}