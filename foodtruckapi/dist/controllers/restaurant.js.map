{"version":3,"sources":["../../src/controllers/restaurant.js"],"names":["config","db","api","post","req","res","newRest","name","body","save","err","setEncoding","json","message","get","find","restaurants","send","findById","params","id","restaurant","put","delete","findByIdAndRemove"],"mappings":";;;;;;AACA;;;;AACA;;AACA;;;;;;kBAEc,gBAAmB;AAAA,QAAhBA,MAAgB,QAAhBA,MAAgB;AAAA,QAARC,EAAQ,QAARA,EAAQ;;AAC7B,QAAIC,MAAM,sBAAV;;AAEA;AACAA,QAAIC,IAAJ,CAAS,MAAT,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3B,YAAIC,UAAU,0BAAd;AACAA,gBAAQC,IAAR,GAAeH,IAAII,IAAJ,CAASD,IAAxB;;AAEAD,gBAAQG,IAAR,CAAa,eAAO;AAChB,gBAAGC,GAAH,EAAO;AACHL,oBAAIM,WAAJ,CAAgBD,GAAhB;AACH;AACDL,gBAAIO,IAAJ,CAAS,EAACC,SAAS,gCAAV,EAAT;AACH,SALD;AAMH,KAVD;;AAYA;AACAX,QAAIY,GAAJ,CAAQ,GAAR,EAAa,UAACV,GAAD,EAAMC,GAAN,EAAc;AACvB,6BAAWU,IAAX,CAAgB,EAAhB,EAAoB,UAACL,GAAD,EAAMM,WAAN,EAAsB;AACtC,gBAAGN,GAAH,EAAO;AACHL,oBAAIY,IAAJ,CAASP,GAAT;AACH;AACDL,gBAAIO,IAAJ,CAASI,WAAT;AACH,SALD;AAMH,KAPD;;AASA;;AAEAd,QAAIY,GAAJ,CAAQ,MAAR,EAAgB,UAACV,GAAD,EAAMC,GAAN,EAAc;AAC1B,6BAAWa,QAAX,CAAoBd,IAAIe,MAAJ,CAAWC,EAA/B,EAAmC,UAACV,GAAD,EAAMW,UAAN,EAAqB;AACpD,gBAAGX,GAAH,EAAO;AACHL,oBAAIY,IAAJ,CAASP,GAAT;AACH;AACDL,gBAAIO,IAAJ,CAASS,UAAT;AACH,SALD;AAMH,KAPD;;AASA;AACAnB,QAAIoB,GAAJ,CAAQ,MAAR,EAAgB,UAAClB,GAAD,EAAKC,GAAL,EAAa;AACzB,6BAAWa,QAAX,CAAoBd,IAAIe,MAAJ,CAAWC,EAA/B,EAAmC,UAACV,GAAD,EAAMW,UAAN,EAAqB;AACpD,gBAAGX,GAAH,EAAO;AACHL,oBAAIY,IAAJ,CAASP,GAAT;AACH;AACDW,uBAAWd,IAAX,GAAkBH,IAAII,IAAJ,CAASD,IAA3B;AACAc,uBAAWZ,IAAX,CAAgB,eAAO;AACnB,oBAAGC,GAAH,EACA;AACIL,wBAAIY,IAAJ,CAASP,GAAT;AACH;AACDL,oBAAIO,IAAJ,CAAS,EAACC,SAAYT,IAAIe,MAAJ,CAAWC,EAAvB,2BAAD,EAAT;AACH,aAND;AASH,SAdD;AAeH,KAhBD;;AAkBA;AACAlB,QAAIqB,MAAJ,CAAW,MAAX,EAAmB,UAACnB,GAAD,EAAKC,GAAL,EAAa;AAC5B,6BAAWmB,iBAAX,CAA6BpB,IAAIe,MAAJ,CAAWC,EAAxC,EAA4C,eAAO;AAC/C,gBAAGV,GAAH,EAAO;AACHL,oBAAIY,IAAJ,CAASP,GAAT;AACH;AACDL,gBAAIO,IAAJ,CAAS,EAACC,SAAYT,IAAIe,MAAJ,CAAWC,EAAvB,2BAAD,EAAT;AACH,SALD;AAMH,KAPD;;AAYA,WAAOlB,GAAP;AAEH,C,EA5ED","file":"restaurant.js","sourcesContent":["//restaurant controller\r\nimport mongoose from 'mongoose';\r\nimport {Router} from 'express';\r\nimport Restaurant from '../models/restaurant.js';\r\n\r\nexport default({ config, db}) => {\r\n    let api = Router();\r\n\r\n    //  for /v1/restaurant/add\r\n    api.post('/add', (req, res) => {\r\n        let newRest = new Restaurant();\r\n        newRest.name = req.body.name;\r\n\r\n        newRest.save(err => {\r\n            if(err){\r\n                res.setEncoding(err);\r\n            }\r\n            res.json({message: 'Restaurant saved successfully.'});\r\n        });\r\n    });\r\n\r\n    // for /v1/restaurant/\r\n    api.get('/', (req, res) => {\r\n        Restaurant.find({}, (err, restaurants) => {\r\n            if(err){\r\n                res.send(err);\r\n            }\r\n            res.json(restaurants);\r\n        });\r\n    });\r\n\r\n    // for /v1/restaurant/:ID | get\r\n\r\n    api.get('/:id', (req, res) => {\r\n        Restaurant.findById(req.params.id, (err, restaurant) => {\r\n            if(err){\r\n                res.send(err);\r\n            }\r\n            res.json(restaurant);\r\n        });\r\n    });\r\n\r\n    // for /v1/restaurant/:id | update\r\n    api.put('/:id', (req,res) => {\r\n        Restaurant.findById(req.params.id, (err, restaurant) => {\r\n            if(err){\r\n                res.send(err);\r\n            }\r\n            restaurant.name = req.body.name;\r\n            restaurant.save(err => {\r\n                if(err)\r\n                {\r\n                    res.send(err);\r\n                }\r\n                res.json({message: `${req.params.id} updated with new name`});\r\n            });\r\n        \r\n            \r\n        });\r\n    });\r\n    \r\n    // for /v1/restaurant/:id | delete\r\n    api.delete('/:id', (req,res) => {\r\n        Restaurant.findByIdAndRemove(req.params.id, err => {\r\n            if(err){\r\n                res.send(err);\r\n            }\r\n            res.json({message: `${req.params.id} successfully deleted.`});\r\n        });\r\n    });\r\n\r\n\r\n\r\n\r\n    return api;\r\n\r\n}"]}